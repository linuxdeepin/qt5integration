/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ./qt5integration/platformthemeplugin/xmls/com.deepin.filemanager.filedialogmanager.xml -a ./qt5integration/toolGenerate/qdbusxml2cpp/com.deepin.filemanager.filedialogmanagerAdaptor -i ./qt5integration/toolGenerate/qdbusxml2cpp/com.deepin.filemanager.filedialogmanager.h
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "./qt5integration/toolGenerate/qdbusxml2cpp/com.deepin.filemanager.filedialogmanagerAdaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class FiledialogmanagerAdaptor
 */

FiledialogmanagerAdaptor::FiledialogmanagerAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

FiledialogmanagerAdaptor::~FiledialogmanagerAdaptor()
{
    // destructor
}

QDBusObjectPath FiledialogmanagerAdaptor::createDialog(const QString &key)
{
    // handle method call com.deepin.filemanager.filedialogmanager.createDialog
    QDBusObjectPath path;
    QMetaObject::invokeMethod(parent(), "createDialog", Q_RETURN_ARG(QDBusObjectPath, path), Q_ARG(QString, key));
    return path;
}

void FiledialogmanagerAdaptor::destroyDialog(const QDBusObjectPath &path)
{
    // handle method call com.deepin.filemanager.filedialogmanager.destroyDialog
    QMetaObject::invokeMethod(parent(), "destroyDialog", Q_ARG(QDBusObjectPath, path));
}

QList<QDBusObjectPath> FiledialogmanagerAdaptor::dialogs()
{
    // handle method call com.deepin.filemanager.filedialogmanager.dialogs
    QList<QDBusObjectPath> dialogObjectList;
    QMetaObject::invokeMethod(parent(), "dialogs", Q_RETURN_ARG(QList<QDBusObjectPath>, dialogObjectList));
    return dialogObjectList;
}

QString FiledialogmanagerAdaptor::errorString()
{
    // handle method call com.deepin.filemanager.filedialogmanager.errorString
    QString error;
    QMetaObject::invokeMethod(parent(), "errorString", Q_RETURN_ARG(QString, error));
    return error;
}

bool FiledialogmanagerAdaptor::isUseFileChooserDialog()
{
    // handle method call com.deepin.filemanager.filedialogmanager.isUseFileChooserDialog
    bool ok;
    QMetaObject::invokeMethod(parent(), "isUseFileChooserDialog", Q_RETURN_ARG(bool, ok));
    return ok;
}

